version: "3"

tasks:
  uv:
    aliases: ["pkg", "pm"]
    cmds:
      - uv {{.CLI_ARGS}}

  sync:
    cmds:
      # - uv self update
      - uv sync --all-packages --all-groups --upgrade
    ignore_error: true

  fmt:
    cmds:
      # - uv run ruff format . --config=pyproject.toml
      - uv run ruff check --fix . --config=pyproject.toml
      - uv run ruff check --fix . --config=pyproject.toml
      - uv run ruff format . --config=pyproject.toml
      # - uv run ruff format .
    ignore_error: true

  build:
    aliases: ["b"]
    cmds:
      - uv build -o dist/
    ignore_error: true

  build:pyo3:
    aliases: ["br"]
    cmds:
      - uvx maturin develop --release --strip
      # - uv run maturin build

  rel:
    aliases: ["rel"]
    cmds:
      - uvx maturin build --release --strip

  publish:rust:
    aliases: ["pr"]
    cmds:
      - echo "publish to pypi, token is $UV_PUBLISH_TOKEN"
      - uvx maturin publish
    dotenv:
      - ../../.env

  run01:
    aliases: ["r1"]
    cmds:
      - uv run src/main.py

  clean:
    aliases: ["cl"]
    cmds:
      - find . -name "target" -exec rm -rf {} \;
      - find . -name "build" -exec rm -rf {} \;
      - find . -name "dist" -exec rm -rf {} \;
    ignore_error: true

  clean:build:
    aliases: ["cb"]
    cmds:
      - task: clean
      - task: build

  publish:
    aliases: ["pub", "up"]
    cmds:
      - task: build
      - echo "publish to pypi, token is $UV_PUBLISH_TOKEN"
      - uv publish --token $UV_PUBLISH_TOKEN
      - open https://pypi.org/project/rspx
    ignore_error: true
    dotenv:
      - ../../.env

  test:
    aliases: ["t"]
    cmds:
      - uv run pytest -s -ra {{.CLI_ARGS}}
    ignore_error: true

  ##################################################################################################

  quick:
    aliases: ["q"]
    cmds:
      - task: cc
      - task: push

  # usage: task rc -- 2
  cf:
    aliases: ["reset:commit", "rc"]
    cmds:
      - git reset --soft HEAD~{{.CLI_ARGS}}
      - task: c

  cc:
    cmds:
      - task: commit
      - task: commit

  commit:
    aliases: ["c"]
    cmds:
      - git add .
      - git status
      - git commit -m "update" --no-verify
    ignore_error: true

  pull:
    cmds:
      - git config pull.rebase false
      - git pull origin main

  push:
    cmds:
      - git push origin main --tags
      - repo_url=`git remote -v | grep push | awk -F ":" '{print $2}' | awk -F ".git" '{print "https://github.com/"$1}'`; open $repo_url
